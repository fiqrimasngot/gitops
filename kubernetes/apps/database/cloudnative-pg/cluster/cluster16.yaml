---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
spec:
  instances: 1
  imageName: ghcr.io/tensorchord/cloudnative-pgvecto.rs:16.2-v0.2.1
  primaryUpdateStrategy: unsupervised
  storage:
    size: 10Gi
    storageClass: longhorn
  superuserSecret:
    name: cloudnative-pg
  enableSuperuserAccess: true
  postgresql:
    shared_preload_libraries:
      - "vectors.so"
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 5GB
      shared_buffers: 512MB
  # resources:
  #   requests:
  #     cpu: 200m
  #   limits:
  #     memory: 2Gi
  monitoring:
    enablePodMonitor: true
    # Ref: https://github.com/cloudnative-pg/cloudnative-pg/issues/2501
    podMonitorMetricRelabelings:
      - {
        sourceLabels: ["cluster"],
        targetLabel: cnpg_cluster,
        action: replace,
      }
      - { regex: cluster, action: labeldrop }
  backup:
    retentionPolicy: 30d
    barmanObjectStore: &barmanObjectStore
      data:
        compression: bzip2
      wal:
        compression: bzip2
        maxParallel: 8
      destinationPath: s3://cloudnative-pg/
      endpointURL: http://minio.storage.svc.cluster.local:9000
      # Note: serverName version needs to be incremented
      # when recovering from an existing cnpg cluster
      serverName: &currentCluster postgres16-immich-v3
      s3Credentials:
        accessKeyId:
          name: cloudnative-pg
          key: aws-access-key-id
        secretAccessKey:
          name: cloudnative-pg
          key: aws-secret-access-key
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    # initdb:
    #   database: immich
    #   owner: immich
    #   postInitApplicationSQL:
    #     - CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    #     - CREATE EXTENSION IF NOT EXISTS cube;
    #     - CREATE EXTENSION IF NOT EXISTS earthdistance;
    #     - CREATE EXTENSION IF NOT EXISTS vectors;
    #   secret:
    #     name: cloudnative-pg
    recovery:
      source: &previousCluster postgres16-immich-v2
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: *previousCluster
      barmanObjectStore:
        <<: *barmanObjectStore
        serverName: *previousCluster
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-lb
  annotations:
    # external-dns.alpha.kubernetes.io/hostname: postgres.kokoro.wtf
    io.cilium/lb-ipam-ips: ${SECRET_POSTGRES_SVC}
spec:
  type: LoadBalancer
  externalTrafficPolicy: Cluster
  ports:
    - name: postgres
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    cnpg.io/cluster: postgres
    role: primary
